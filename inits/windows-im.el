;; (prefer-coding-system 'utf-8-dos)
;; (set-file-name-coding-system 'cp932)
;; (setq default-process-coding-system '(cp932 . cp932))
;; (set-terminal-coding-system 'cp932)
;; (coding-system-put 'cp932 :mnemonic ?P)
;; (coding-system-put 'cp932-dos :mnemonic ?P)
;; (coding-system-put 'cp932-unix :mnemonic ?P)
;; (coding-system-put 'cp932-mac :mnemonic ?P)))

(setq default-input-method "W32-IME")
(w32-ime-initialize)

(add-hook 'post-command-hook
  (lambda() (if (ime-get-mode)
              (set-cursor-color "#ff5555")
              (set-cursor-color "#88ccff"))))
;; IME off at minibuffer
(defvar *ime-mode-into-minibuffer* nil)
(defun ime-state-get-and-setoff (bef-buffer file-name)
  (interactive)
  (setq *ime-mode-into-minibuffer* (ime-get-mode))
  (toggle-ime nil))
(defun ime-state-set (bef-buffer file-name)
  (interactive)
  (toggle-ime *ime-mode-into-minibuffer*))
(add-hook '*enter-minibuffer-hook* 'ime-state-get-and-setoff)
(add-hook '*exit-minibuffer-hook* 'ime-state-set)))
